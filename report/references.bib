@online{squad-explorer,
  author = {SQuAD},
  title  = {SQuAD explorer},
  url    = {https://rajpurkar.github.io/SQuAD-explorer/}
}

@inproceedings{glove,
  title     = {{G}lo{V}e: Global Vectors for Word Representation},
  author    = {Pennington, Jeffrey  and
      Socher, Richard  and
      Manning, Christopher},
  booktitle = {Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing ({EMNLP})},
  month     = oct,
  year      = {2014},
  address   = {Doha, Qatar},
  publisher = {Association for Computational Linguistics},
  url       = {https://www.aclweb.org/anthology/D14-1162},
  doi       = {10.3115/v1/D14-1162},
  pages     = {1532--1543}
}

@incollection{word2vec,
  added-at  = {2015-08-28T18:25:59.000+0200},
  author    = {Mikolov, Tomas and Sutskever, Ilya and Chen, Kai and Corrado, Greg S and Dean, Jeff},
  booktitle = {NIPS},
  interhash = {4d7ff49f008ec05928f11e50f2db1cf9},
  intrahash = {4068b331120ae60adb367eb4cd1b7407},
  keywords  = {blog_semnav_wiki deep deepwiki learning proposal solvatio tau word2vec},
  pages     = {3111--3119},
  publisher = {Curran Associates, Inc.},
  timestamp = {2018-02-28T16:31:16.000+0100},
  title     = {Distributed Representations of Words and Phrases and their Compositionality},
  url       = {http://papers.nips.cc/paper/5021-distributed-representations-of-words-and-phrases-and-their-compositionality.pdf},
  year      = 2013
}

@inproceedings{ppmi,
  author    = {Niwa, Yoshiki and Nitta, Yoshihiko},
  title     = {Co-Occurrence Vectors from Corpora vs. Distance Vectors from Dictionaries},
  year      = {1994},
  publisher = {Association for Computational Linguistics},
  address   = {USA},
  url       = {https://doi.org/10.3115/991886.991938},
  doi       = {10.3115/991886.991938},
  abstract  = {A comparison was made of vectors derived by using ordinary co-occurrence statistics from large text corpora and of vectors derived by measuring the interword distances in dictionary definitions. The precision of word sense disambiguation by using co-occurrence vectors from the 1987 Wall Street Journal (20M total words) was higher than that by using distance vectors from the Collins English Dictionary (60K head words + 1.6M definition words). However, other experimental results suggest that distance vectors contain some different semantic information from co-occurrence vectors.},
  booktitle = {Proceedings of the 15th Conference on Computational Linguistics - Volume 1},
  pages     = {304–309},
  numpages  = {6},
  location  = {Kyoto, Japan},
  series    = {COLING '94}
}

@inbook{tf-idf,
  editor    = {Sammut, Claude and Webb, Geoffrey I.},
  title     = {TF--IDF},
  booktitle = {Encyclopedia of Machine Learning},
  year      = {2010},
  publisher = {Springer US},
  address   = {Boston, MA},
  pages     = {986--987},
  isbn      = {978-0-387-30164-8},
  doi       = {10.1007/978-0-387-30164-8_832},
  url       = {https://doi.org/10.1007/978-0-387-30164-8_832}
}

@article{transformers,
  author    = {Ashish Vaswani and
               Noam Shazeer and
               Niki Parmar and
               Jakob Uszkoreit and
               Llion Jones and
               Aidan N. Gomez and
               Lukasz Kaiser and
               Illia Polosukhin},
  title     = {Attention Is All You Need},
  journal   = {CoRR},
  volume    = {abs/1706.03762},
  year      = {2017},
  url       = {http://arxiv.org/abs/1706.03762},
  archivePrefix = {arXiv},
  eprint    = {1706.03762}
}

@article{lstm,
  author      = {Sepp Hochreiter and Jürgen Schmidhuber},
  journal     = {Neural Computation},
  title       = {Long Short-Term Memory},
  year        = {1997},
  number      = {8},
  pages       = {1735--1780},
  volume      = {9},
  abstract = {Learning to store information over extended time intervals by recurrent backpropagation takes a very long time, mostly because of insufficient, decaying error backflow. We briefly review Hochreiter's (1991) analysis of this problem, then address it by introducing a novel, efficient, gradient based method called long short-term memory (LSTM). Truncating the gradient where this does not do harm, LSTM can learn to bridge minimal time lags in excess of 1000 discrete-time steps by enforcing constant error flow through constant error carousels within special units. Multiplicative gate units learn to open and close access to the constant error flow. LSTM is local in space and time; its computational complexity per time step and weight is O. 1. Our experiments with artificial data involve local, distributed, real-valued, and noisy pattern representations. In comparisons with real-time recurrent learning, back propagation through time, recurrent cascade correlation, Elman nets, and neural sequence chunking, LSTM leads to many more successful runs, and learns much faster. LSTM also solves complex, artificial long-time-lag tasks that have never been solved by previous recurrent network algorithms.},
  doi      = {10.1162/neco.1997.9.8.1735},
}

@InProceedings{gru,
  title = 	 {Deep Gate Recurrent Neural Network},
  author = 	 {Yuan Gao and Dorota Glowacka},
  booktitle = 	 {Proceedings of The 8th Asian Conference on Machine Learning},
  pages = 	 {350--365},
  year = 	 {2016},
  editor = 	 {Robert J. Durrant and Kee-Eung Kim},
  volume = 	 {63},
  series = 	 {Proceedings of Machine Learning Research},
  address = 	 {The University of Waikato, Hamilton, New Zealand},
  month = 	 {16--18 Nov},
  publisher =    {PMLR},
  pdf = 	 {http://proceedings.mlr.press/v63/gao30.pdf},
  url = 	 {http://proceedings.mlr.press/v63/gao30.html},
  abstract = 	 {This paper explores the possibility of using multiplicative gates to build two recurrent neural network structures. These two structures are called Deep Simple Gated Unit (DSGU) and Simple Gated Unit (SGU), which are structures for learning long-term dependencies. Compared to traditional Long Short-Term Memory (LSTM) and Gated Recurrent Unit (GRU), both structures require fewer parameters and less computation time in sequence classification tasks. Unlike GRU and LSTM, which require more than one gate to control information flow in the network, SGU and DSGU only use one multiplicative gate to control the flow of information. We show that this difference can accelerate the learning speed in tasks that require long dependency information. We also show that DSGU is more numerically stable than SGU. In addition, we also propose a standard way of representing the inner structure of RNN called RNN Conventional Graph (RCG), which helps to analyze the relationship between input units and hidden units of RNN.}
}

@online{recurrent-img,
  author = {Nikolai Morin},
  title  = {What's the difference between “hidden” and “output” in PyTorch LSTM?},
  url    = {https://stackoverflow.com/questions/48302810/whats-the-difference-between-hidden-and-output-in-pytorch-lstm}
}
